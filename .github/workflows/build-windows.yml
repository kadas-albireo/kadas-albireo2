---
name: 🪟 Build - Windows
on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: ['published']
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build (windows)
    runs-on: windows-2022

    steps:
      - name: 🐣 Checkout
        uses: actions/checkout@v4

      - name: 🐩 Install CMake and Ninja
        uses: lukka/get-cmake@latest
        with:
          # Pin to specific version to avoid rebuilding too often
          # Also helps to avoid spurious build failures like https://github.com/qgis/QGIS/pull/47098
          cmakeVersion: 3.29.0

      - name: 🧽 Developer Command Prompt for Microsoft Visual C++
        uses: ilammy/msvc-dev-cmd@v1

      - name: 📦 Prepare msi
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'release'
        shell: bash
        run: |
          echo "CREATE_MSI_CMAKE_VAR=-D CREATE_MSI=ON" >> $GITHUB_ENV

      - name: 🌱 Install dependencies and generate project files
        shell: bash
        run: |
          cmake -S . \
                -G Ninja \
                -B build \
                -D CMAKE_BUILD_TYPE=Release \
                -D CMAKE_INSTALL_PREFIX="C:\kadas" \
                -D WITH_BINDINGS=ON \
                -D WITH_GLOBE=OFF \
                -D INSTALL_DEMO_DATA=ON \
                -D VCPKG_TARGET_TRIPLET="x64-windows" \
                -D VCPKG_INSTALL_OPTIONS="--x-buildtrees-root=C:/src" \
                -D SIP_BUILD_EXECUTABLE="$(pwd)\build\vcpkg_installed\x64-windows\tools\python3\Scripts\sip-build.exe" \
                -D PYUIC_PROGRAM="$(pwd)\build\vcpkg_installed\x64-windows\tools\python3\pyuic5.bat" \
                -D PYRCC_PROGRAM="$(pwd)\build\vcpkg_installed\x64-windows\tools\python3\pyrcc5.bat" \
                -D QGIS_PYTHON_MODULE_DIR="$(pwd)\build\vcpkg_installed\x64-windows\tools\python3\Lib\site-packages\qgis" \
                -D CPACK_PACKAGE_FILE_NAME="kadas-win64-$(date +'%Y-%m-%d_%H%M')" \
                -D NUGET_USERNAME=kadas-albireo \
                -D NUGET_TOKEN=${{ secrets.GITHUB_TOKEN }} \
                ${CREATE_MSI_CMAKE_VAR}

      - name: 📑 Upload vcpkg build logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-logs-x64-windows
          path: |
            C:/src/**/*.log

      - name: 📦 Create SDK
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'release'
        run: |
          ./build/_deps/vcpkg-src/vcpkg.exe export --zip --output-dir=./sdk --x-install-root=build/vcpkg_installed --x-manifest-root=vcpkg
        
      - name: 📤 Upload sdk
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: kadas-albireo2-sdk-x64-windows
          path: |
            sdk/vcpkg-export-*.zip

      - name: Compile plugins translation
        run: |
          # lrelease is run from cmake for app
          # plugins need to be handled
          set PATH=${{ github.workspace }}\build\vcpkg_installed\x64-windows\tools\qt5\bin";%PATH%
          for PLUGIN in about gpkg print; do
            lrelease share/python/plugins/kadas_${PLUGIN}/kadas_${PLUGIN}_ts.pro
          done
    
      - name: 🌋 Build
        run: |
          cmake --build build --config Release

      - name: 📦 Package
        run: |
          cmake --build build --target bundle --config Release

      - name: 📤 Upload portable
        uses: actions/upload-artifact@v4
        with:
          name: kadas-albireo2-portable
          path: |
            build/kadas-*.zip

      - name: 📤 Upload msi
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: kadas-albireo2-msi
          path: |
            build/kadas-*-win64.msi

    

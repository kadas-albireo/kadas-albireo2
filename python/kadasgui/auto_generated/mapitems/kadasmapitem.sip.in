/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * kadas/gui/mapitems/kadasmapitem.h                                    *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/







class KadasMapPos
{
%Docstring
*************************************************************************

This program is free software; you can redistribute it and/or modify  *
it under the terms of the GNU General Public License as published by  *
the Free Software Foundation; either version 2 of the License, or     *
(at your option) any later version.                                   *

**************************************************************************
%End

%TypeHeaderCode
#include "kadas/gui/mapitems/kadasmapitem.h"
%End
  public:
    static KadasMapPos fromPoint( const QgsPointXY &pos );

    KadasMapPos( double x = 0., double y = 0. );
    double x() const;
    void setX( double x );
    double y() const;
    void setY( double y );
    operator QgsPointXY() const;
    double sqrDist( const KadasMapPos &p ) const;
};

class KadasMapRect
{

%TypeHeaderCode
#include "kadas/gui/mapitems/kadasmapitem.h"
%End
  public:
    KadasMapRect( double xMin = 0., double yMin = 0., double xMax = 0., double yMax = 0. );
    KadasMapRect( const KadasMapPos &p1, const KadasMapPos &p2 );
    KadasMapRect( const KadasMapPos &center, double span );
    double xMinimum() const;
    void setXMinimum( double xMin );
    double yMinimum() const;
    void setYMinimum( double yMin );
    double xMaximum() const;
    void setXMaximum( double xMax );
    double yMaximum() const;
    void setYMaximum( double ymax );
    operator QgsRectangle() const;
    KadasMapPos center() const;
};

class KadasItemPos
{

%TypeHeaderCode
#include "kadas/gui/mapitems/kadasmapitem.h"
%End
  public:
    static KadasItemPos fromPoint( const QgsPointXY &pos );

    KadasItemPos( double x = 0., double y = 0. );
    double x() const;
    void setX( double x );
    double y() const;
    void setY( double y );
    operator QgsPointXY() const;
    double sqrDist( const KadasItemPos &p ) const;
};

class KadasItemRect
{

%TypeHeaderCode
#include "kadas/gui/mapitems/kadasmapitem.h"
%End
  public:
    KadasItemRect( double xMin = 0., double yMin = 0., double xMax = 0., double yMax = 0. );
    KadasItemRect( const KadasItemPos &p1, const KadasItemPos &p2 );
    double xMinimum() const;
    void setXMinimum( double xMin );
    double yMinimum() const;
    void setYMinimum( double yMin );
    double xMaximum() const;
    void setXMaximum( double xMax );
    double yMaximum() const;
    void setYMaximum( double ymax );
    operator QgsRectangle() const;
    KadasItemPos center() const;
};

class KadasMapItem : QObject /Abstract/
{

%TypeHeaderCode
#include "kadas/gui/mapitems/kadasmapitem.h"
%End
  public:
    KadasMapItem( const QgsCoordinateReferenceSystem &crs, QObject *parent );
    ~KadasMapItem();
    KadasMapItem *clone() const;
    QJsonObject serialize() const;
    bool deserialize( const QJsonObject &json );

    virtual QString itemName() const = 0;

    const QgsCoordinateReferenceSystem &crs() const;
%Docstring
The item crs */
%End

    virtual KadasItemRect boundingBox() const = 0;
%Docstring
Bounding box in geographic coordinates */
%End

    struct Margin
    {
      int left;
      int top;
      int right;
      int bottom;
    };
    virtual Margin margin() const;

    struct Node
    {
      KadasMapPos pos;
      // TODO
    };

    virtual QList<KadasMapItem::Node> nodes( const QgsMapSettings &settings ) const = 0;

    virtual bool intersects( const KadasMapRect &rect, const QgsMapSettings &settings ) const = 0;
%Docstring
Hit test, rect in item crs */
%End

    virtual void render( QgsRenderContext &context ) const = 0;
%Docstring
Render the item */
%End


    void associateToLayer( QgsMapLayer *layer );
%Docstring
Associate to layer */
%End
    QgsMapLayer *associatedLayer() const;

    void setSelected( bool selected );
%Docstring
Selected state */
%End
    bool selected() const;

    void setZIndex( int zIndex );
%Docstring
z-index */
%End
    int zIndex() const;

    void update();
%Docstring
Trigger a redraw */
%End

    struct State : KadasStateHistory::State
    {
      enum DrawStatus { Empty, Drawing, Finished };
      DrawStatus drawStatus;
      virtual void assign( const State *other ) = 0;
      virtual State *clone() const = 0 /Factory/;
      virtual QJsonObject serialize() const = 0;
      virtual bool deserialize( const QJsonObject &json ) = 0;
    };
    const State *constState() const;
    virtual void setState( const State *state );

    struct NumericAttribute
    {
      QString name;
      double min;
      double max;
      int decimals;
    };
    typedef QMap<int, KadasMapItem::NumericAttribute> AttribDefs;
    typedef QMap<int, double> AttribValues;

    virtual void clear();
    virtual bool startPart( const KadasMapPos &firstPoint, const QgsMapSettings &mapSettings ) = 0;
    virtual bool startPart( const AttribValues &values, const QgsMapSettings &mapSettings ) = 0;
    virtual void setCurrentPoint( const KadasMapPos &p, const QgsMapSettings &mapSettings ) = 0;
    virtual void setCurrentAttributes( const AttribValues &values, const QgsMapSettings &mapSettings ) = 0;
    virtual bool continuePart( const QgsMapSettings &mapSettings ) = 0;
    virtual void endPart() = 0;

    virtual AttribDefs drawAttribs() const = 0;
    virtual AttribValues drawAttribsFromPosition( const KadasMapPos &pos, const QgsMapSettings &mapSettings ) const = 0;
    virtual KadasMapPos positionFromDrawAttribs( const AttribValues &values, const QgsMapSettings &mapSettings ) const = 0;

    struct EditContext
    {
      EditContext();
      EditContext( const QgsVertexId &_vidx, const KadasMapPos &_pos = KadasMapPos(), const AttribDefs &_attributes = KadasMapItem::AttribDefs(), Qt::CursorShape _cursor = Qt::CrossCursor );
      bool mValid;
      QgsVertexId vidx;
      KadasMapPos pos;
      AttribDefs attributes;
      Qt::CursorShape cursor;
      bool isValid() const;
      bool operator== ( const EditContext &other ) const;
      bool operator!= ( const EditContext &other ) const;
    };
    virtual EditContext getEditContext( const KadasMapPos &pos, const QgsMapSettings &mapSettings ) const = 0;
    virtual void edit( const EditContext &context, const KadasMapPos &newPoint, const QgsMapSettings &mapSettings ) = 0;
    virtual void edit( const EditContext &context, const AttribValues &values, const QgsMapSettings &mapSettings ) = 0;
    enum ContextMenuActions
    {
      EditNoAction,
      EditSwitchToDrawingTool
    };
    virtual void populateContextMenu( QMenu *menu, const EditContext &context, const KadasMapPos &clickPos, const QgsMapSettings &mapSettings );

    virtual AttribValues editAttribsFromPosition( const EditContext &context, const KadasMapPos &pos, const QgsMapSettings &mapSettings ) const = 0;
    virtual KadasMapPos positionFromEditAttribs( const EditContext &context, const AttribValues &values, const QgsMapSettings &mapSettings ) const = 0;

    void setEditor( const QString &editor );
    const QString &editor() const;

    virtual KadasItemPos position() const = 0;
    virtual void setPosition( const KadasItemPos &pos ) = 0;


  signals:
    void aboutToBeDestroyed();
    void changed();

  protected:

    virtual KadasMapItem::State *createEmptyState() const = 0 /Factory/;

    static void defaultNodeRenderer( QPainter *painter, const QPointF &screenPoint, int nodeSize );
    static void anchorNodeRenderer( QPainter *painter, const QPointF &screenPoint, int nodeSize );

    KadasMapPos toMapPos( const KadasItemPos &itemPos, const QgsMapSettings &settings ) const;
    KadasItemPos toItemPos( const KadasMapPos &mapPos, const QgsMapSettings &settings ) const;
    KadasMapRect toMapRect( const KadasItemRect &itemRect, const QgsMapSettings &settings ) const;
    KadasItemRect toItemRect( const KadasMapRect &itemRect, const QgsMapSettings &settings ) const;
    double pickTolSqr( const QgsMapSettings &settings ) const;
    double pickTol( const QgsMapSettings &settings ) const;

};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * kadas/gui/mapitems/kadasmapitem.h                                    *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/

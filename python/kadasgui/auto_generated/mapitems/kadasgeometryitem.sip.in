/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * kadas/gui/mapitems/kadasgeometryitem.h                               *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/







class KadasGeometryItem : KadasMapItem /Abstract/
{
%Docstring
*************************************************************************

This program is free software; you can redistribute it and/or modify  *
it under the terms of the GNU General Public License as published by  *
the Free Software Foundation; either version 2 of the License, or     *
(at your option) any later version.                                   *

**************************************************************************
%End

%TypeHeaderCode
#include "kadas/gui/mapitems/kadasgeometryitem.h"
%End
  public:
    enum IconType
    {
      ICON_NONE,
      ICON_CROSS,
      ICON_X,
      ICON_BOX,
      ICON_CIRCLE,
      ICON_FULL_BOX,
      ICON_TRIANGLE,
      ICON_FULL_TRIANGLE
    };

    KadasGeometryItem( const QgsCoordinateReferenceSystem &crs, QObject *parent = 0 );
    ~KadasGeometryItem();

    virtual KadasItemRect boundingBox() const;

    virtual Margin margin() const;

    virtual QList<KadasMapItem::Node> nodes( const QgsMapSettings &settings ) const;

    virtual bool intersects( const KadasMapRect &rect, const QgsMapSettings &settings ) const;

    virtual void render( QgsRenderContext &context ) const;


    virtual void clear();

    virtual void setState( const State *state );


    virtual QgsWkbTypes::GeometryType geometryType() const = 0;
    virtual void addPartFromGeometry( const QgsAbstractGeometry &geom ) = 0;

    QPen outline() const;
    void setOutline( const QPen &pen );
    QBrush fill() const;
    void setFill( const QBrush &brush );
    int iconSize() const;
    void setIconSize( int iconSize );
    IconType iconType() const;
    void setIconType( IconType iconType );
    QPen iconOutline() const;
    void setIconOutline( const QPen &iconPen );
    QBrush iconFill() const;
    void setIconFill( const QBrush &iconBrush );

    void setMeasurementsEnabled( bool enabled, QgsUnitTypes::DistanceUnit baseUnit = QgsUnitTypes::DistanceMeters );
    QString getTotalMeasurement() const;

    const QgsAbstractGeometry *geometry() const;

  signals:
    void geometryChanged();

  protected:





    void setInternalGeometry( QgsAbstractGeometry *geom );

    void drawVertex( QPainter *p, double x, double y ) const;
    QgsUnitTypes::DistanceUnit distanceBaseUnit() const;
    QgsUnitTypes::AreaUnit areaBaseUnit() const;
    QString formatLength( double value, QgsUnitTypes::DistanceUnit unit ) const;
    QString formatArea( double value, QgsUnitTypes::AreaUnit unit ) const;
    QString formatAngle( double value, QgsUnitTypes::AngleUnit unit ) const;
    void addMeasurements( const QStringList &measurements, const KadasItemPos &mapPos, bool center = true );

    QgsVertexId insertionPoint( const QList<QList<KadasItemPos>> &points, const KadasItemPos &testPos ) const;

    virtual void recomputeDerived() = 0;
    virtual void measureGeometry();

};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * kadas/gui/mapitems/kadasgeometryitem.h                               *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * kadas/gui/maptools/kadasmaptoolcreateitem.h                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/






class KadasMapToolCreateItem : QgsMapTool
{
%Docstring(signature="appended")
*************************************************************************

This program is free software; you can redistribute it and/or modify  *
it under the terms of the GNU General Public License as published by  *
the Free Software Foundation; either version 2 of the License, or     *
(at your option) any later version.                                   *

**************************************************************************
%End

%TypeHeaderCode
#include "kadas/gui/maptools/kadasmaptoolcreateitem.h"
%End
  public:

    KadasMapToolCreateItem( QgsMapCanvas *canvas, KadasMapItemInterface* interface /Transfer/, KadasItemLayer *layer = 0 );

    KadasMapToolCreateItem( QgsMapCanvas *canvas, KadasMapItem *item, KadasItemLayer *layer = 0 );
    ~KadasMapToolCreateItem();

    virtual void activate();

    virtual void deactivate();


    virtual void canvasPressEvent( QgsMapMouseEvent *e );

    virtual void canvasMoveEvent( QgsMapMouseEvent *e );

    virtual void canvasReleaseEvent( QgsMapMouseEvent *e );

    virtual void keyPressEvent( QKeyEvent *e );


    const KadasMapItem *currentItem() const;
    KadasMapItem *takeItem();
    const KadasMapItemEditor *currentEditor() const;

    void setMultipart( bool multipart );
    void setSnappingEnabled( bool snapping );
    void setSelectItems( bool select );
    void setToolLabel( const QString &label );
    void setUndoRedoVisible( bool undoRedoVisible );
    void setExtraBottomBarContents( QWidget *widget );

    // TODO: creator should be optional
    void showLayerSelection( bool enabled, QgsLayerTreeView *layerTreeView, SIP_PYCALLABLE filter, SIP_PYCALLABLE creator );
%MethodCode

    // Make sure the callables doesn't get garbage collected, this is needed because refcount for a1/a2 is 0
    // and the creation function pointer is passed to the metadata and it needs to be kept in memory.
    Py_INCREF( a2 );
    Py_INCREF( a3 );

    Py_BEGIN_ALLOW_THREADS

    auto layerFilter = [a2]( QgsMapLayer *layer ) -> bool
    {
      bool result = false;
      SIP_BLOCK_THREADS
      PyObject *s = sipCallMethod( NULL, a2, "D", layer, sipType_QgsMapLayer, NULL );
      if ( s )
      {
        result = sipConvertToBool( s );
      }
      SIP_UNBLOCK_THREADS
      return result;
    };

    auto layerCreator = [a3]( const QString &name ) -> QgsMapLayer *
    {
      QgsMapLayer *result = nullptr;
      SIP_BLOCK_THREADS
      PyObject *s = sipCallMethod( NULL, a3, "D", &name, sipType_QString, NULL );
      if ( s )
      {
        int state;
        int sipIsError = 0;
        result = reinterpret_cast<QgsMapLayer *>( sipConvertToType( s, sipType_QgsMapLayer, NULL, SIP_NOT_NONE, &state, &sipIsError ) );
        sipReleaseType( result, sipType_QgsMapLayer, state );
      }
      SIP_UNBLOCK_THREADS
      return result;
    };

    sipCpp->showLayerSelection( a0, a1, layerFilter, layerCreator );
    Py_END_ALLOW_THREADS

%End
    void addPartFromGeometry( const QgsAbstractGeometry &geom, const QgsCoordinateReferenceSystem &crs );
    void addPoint( const KadasMapPos &mapPos );

  public slots:
    void clear();

  signals:
    void cleared();
    void partFinished();
    void targetLayerChanged( QgsMapLayer *layer );

  protected:
    void createItem();
    void startPart( const KadasMapPos &pos );
    void startPart( const KadasMapItem::AttribValues &attributes );
    void finishPart();
    void commitItem();
    KadasMapPos transformMousePoint( QgsPointXY mapPos ) const;
    KadasMapItem::AttribValues collectAttributeValues() const;
    KadasMapItem *mutableItem();

  protected:

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * kadas/gui/maptools/kadasmaptoolcreateitem.h                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/

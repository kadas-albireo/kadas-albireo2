CMAKE_MINIMUM_REQUIRED(VERSION 3.1.0)
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})
INCLUDE(GenerateExportHeader)

PROJECT(kadas)
set(CMAKE_CXX_STANDARD 14)

SET(KADAS_NAME "Kadas")
SET(KADAS_FULL_NAME "Kadas Albireo")
SET(KADAS_VERSION_MAJOR "2")
SET(KADAS_VERSION_MINOR "0")
SET(KADAS_VERSION_PATCH "0")
EXECUTE_PROCESS(COMMAND git rev-parse HEAD OUTPUT_VARIABLE KADAS_VERSION_DEV OUTPUT_STRIP_TRAILING_WHITESPACE)

FIND_PACKAGE(PkgConfig REQUIRED)
FIND_PACKAGE(Qt5Widgets REQUIRED)
FIND_PACKAGE(Qt5Network REQUIRED)
FIND_PACKAGE(Qt5DBus REQUIRED)
FIND_PACKAGE(Qt5OpenGL REQUIRED)
FIND_PACKAGE(Qt5PrintSupport REQUIRED)
FIND_PACKAGE(Qt5Sql REQUIRED)
FIND_PACKAGE(Qt5Svg REQUIRED)
FIND_PACKAGE(Qt5Xml REQUIRED)
FIND_PACKAGE(Qt5Keychain REQUIRED)
FIND_PACKAGE(QGIS REQUIRED)
FIND_PACKAGE(GDAL REQUIRED)
FIND_PACKAGE(GeographicLib REQUIRED)
FIND_PACKAGE(QuaZip5 REQUIRED)
SET(CRASHRPT_LIBRARY "GdbCrashHandler" CACHE FILEPATH "Path to CrashRpt library")

PKG_CHECK_MODULES(QCA qca2-qt5)
PKG_CHECK_MODULES(QWT Qt5Qwt6)
IF(NOT QWT_FOUND)
    SET(QWT_INCLUDE_DIRS "" CACHE FILEPATH "Path to QWT headers")
    SET(QWT_LDFLAGS "" CACHE STRING "QWT library")
ENDIF(NOT QWT_FOUND)
PKG_CHECK_MODULES(GDAL gdal)
PKG_CHECK_MODULES(CAIRO cairo)
PKG_CHECK_MODULES(LIBRSVG librsvg-2.0)
PKG_CHECK_MODULES(EXIV2 exiv2)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
INCLUDE_DIRECTORIES(${QGIS_INCLUDE_DIR})

SET(KADAS_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output)
SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${KADAS_OUTPUT_DIRECTORY}/bin)
SET (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${KADAS_OUTPUT_DIRECTORY}/lib)

FILE(WRITE "${CMAKE_BINARY_DIR}/output/bin/.kadasbuilddir")

ADD_SUBDIRECTORY(kadas)
ADD_SUBDIRECTORY(python)

INSTALL (DIRECTORY data DESTINATION share/kadas)


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 36fd3f2c6bc..1785081a0dc 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -368,10 +368,7 @@ if(WITH_CORE)
   find_package(Spatialindex REQUIRED)
   find_package(LibZip REQUIRED)
 
-  find_package(Sqlite3)
-  if (NOT SQLITE3_FOUND)
-    message (SEND_ERROR "sqlite3 dependency was not found!")
-  endif()
+  find_package(SQLite3 REQUIRED)
 
   find_package(Protobuf CONFIG)
   find_package(Protobuf REQUIRED)
diff --git a/cmake/FindSqlite3.cmake b/cmake/FindSqlite3.cmake
deleted file mode 100644
index 4b3c34b53cc..00000000000
--- a/cmake/FindSqlite3.cmake
+++ /dev/null
@@ -1,76 +0,0 @@
-# Find Sqlite3
-# ~~~~~~~~~~~~
-# Copyright (c) 2007, Martin Dobias <wonder.sk at gmail.com>
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-#
-# CMake module to search for Sqlite3 library
-#
-# If it's found it sets SQLITE3_FOUND to TRUE
-# and following variables are set:
-#    SQLITE3_INCLUDE_DIR
-#    SQLITE3_LIBRARY
-
-
-# FIND_PATH and FIND_LIBRARY normally search standard locations
-# before the specified paths. To search non-standard paths first,
-# FIND_* is invoked first with specified paths and NO_DEFAULT_PATH
-# and then again with no specified paths to search the default
-# locations. When an earlier FIND_* succeeds, subsequent FIND_*s
-# searching for the same item do nothing. 
-
-# try to use framework on mac
-# want clean framework path, not unix compatibility path
-IF (APPLE AND NOT QGIS_MAC_DEPS_DIR)
-  IF (CMAKE_FIND_FRAMEWORK MATCHES "FIRST"
-      OR CMAKE_FRAMEWORK_PATH MATCHES "ONLY"
-      OR NOT CMAKE_FIND_FRAMEWORK)
-    SET (CMAKE_FIND_FRAMEWORK_save ${CMAKE_FIND_FRAMEWORK} CACHE STRING "" FORCE)
-    SET (CMAKE_FIND_FRAMEWORK "ONLY" CACHE STRING "" FORCE)
-    #FIND_PATH(SQLITE3_INCLUDE_DIR SQLite3/sqlite3.h)
-    FIND_LIBRARY(SQLITE3_LIBRARY SQLite3)
-    IF (SQLITE3_LIBRARY)
-      # FIND_PATH doesn't add "Headers" for a framework
-      SET (SQLITE3_INCLUDE_DIR ${SQLITE3_LIBRARY}/Headers CACHE PATH "Path to a file.")
-    ENDIF (SQLITE3_LIBRARY)
-    SET (CMAKE_FIND_FRAMEWORK ${CMAKE_FIND_FRAMEWORK_save} CACHE STRING "" FORCE)
-  ENDIF ()
-ENDIF (APPLE AND NOT QGIS_MAC_DEPS_DIR)
-
-# FIND_PATH and FIND_LIBRARY normally search standard locations
-# before the specified paths. To search non-standard paths first,
-# FIND_* is invoked first with specified paths and NO_DEFAULT_PATH
-# and then again with no specified paths to search the default
-# locations. When an earlier FIND_* succeeds, subsequent FIND_*s
-# searching for the same item do nothing.
-FIND_PATH(SQLITE3_INCLUDE_DIR sqlite3.h
-  "$ENV{LIB_DIR}/include"
-  "$ENV{LIB_DIR}/include/sqlite"
-  "$ENV{INCLUDE}"
-  NO_DEFAULT_PATH
-)
-FIND_PATH(SQLITE3_INCLUDE_DIR sqlite3.h)
-
-FIND_LIBRARY(SQLITE3_LIBRARY NAMES sqlite3_i sqlite3 PATHS
-  "$ENV{LIB_DIR}/lib"
-  "$ENV{LIB}/lib"
-  NO_DEFAULT_PATH
-)
-FIND_LIBRARY(SQLITE3_LIBRARY NAMES sqlite3_i sqlite3)
-
-IF (SQLITE3_INCLUDE_DIR AND SQLITE3_LIBRARY)
-   SET(SQLITE3_FOUND TRUE)
-ENDIF (SQLITE3_INCLUDE_DIR AND SQLITE3_LIBRARY)
-
-IF (SQLITE3_FOUND)
-   IF (NOT SQLITE3_FIND_QUIETLY)
-      MESSAGE(STATUS "Found Sqlite3: ${SQLITE3_LIBRARY}")
-   ENDIF (NOT SQLITE3_FIND_QUIETLY)
-
-ELSE (SQLITE3_FOUND)
-
-   IF (SQLITE3_FIND_REQUIRED)
-      MESSAGE(FATAL_ERROR "Could not find Sqlite3")
-   ENDIF (SQLITE3_FIND_REQUIRED)
-
-ENDIF (SQLITE3_FOUND)
diff --git a/src/core/CMakeLists.txt b/src/core/CMakeLists.txt
index a802a8f6431..8d115c2b6bb 100644
--- a/src/core/CMakeLists.txt
+++ b/src/core/CMakeLists.txt
@@ -2393,6 +2393,7 @@ if (APPLE)
 endif()
 
 target_link_libraries(qgis_core
+  SQLite::SQLite3
   ${QT_VERSION_BASE}::Core
   ${QT_VERSION_BASE}::Gui
   ${QT_VERSION_BASE}::Xml
